/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.ProdutoDAO;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import model.Produto;

/**
 *
 * @author chris
 */
public class TelaVisualizarProdutosView extends javax.swing.JFrame {

    /**
     * Creates new form TelaVisualizarProdutosView
     */
    ArrayList<Produto> lista = new ArrayList<>();

    /**
      Construtor inicializa componentes e preenche a lista na tela
     */
    public TelaVisualizarProdutosView() {
        initComponents();
        preencheLista();
    }

    /**
     * Função que preenche a lista do forms com todos os produtos cadastrados
     */
    public void preencheLista() {
         this.lista.removeAll(lista);
        ProdutoDAO produtoDao = new ProdutoDAO();

        try {
            produtoDao.getProdutos().forEach((Produto produto) -> {
                this.lista.add(produto);
            });

            DefaultListModel dlm = new DefaultListModel();
            for (int i = 0; i < this.lista.size(); i++) {
                dlm.addElement(lista.get(i).getNome() + " - " + lista.get(i).getPreco());

            }
            this.jList1.setModel(dlm);
        } catch (Exception e) {
            System.out.println(e.toString());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnFileTxt = new javax.swing.JButton();
        btnFileCsv = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Produtos");

        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Voltar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Excluir Selecionado");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        btnFileTxt.setText("Salvar em TXT");
        btnFileTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFileTxtMouseClicked(evt);
            }
        });

        btnFileCsv.setText("Salvar em CSV");
        btnFileCsv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFileCsvMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFileTxt)
                                .addGap(18, 18, 18)
                                .addComponent(btnFileCsv)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFileTxt)
                    .addComponent(btnFileCsv))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked

        for (int i = 0; i < lista.size(); i++) {
            if (this.jList1.getSelectedValue().contains(this.lista.get(i).getNome())) {
                try {
                    System.out.println(  this.lista.get(i).getNome());
                    ProdutoDAO produtoDao = ProdutoDAO.getInstance();
                    produtoDao.remove(this.lista.get(i).getNome());
                    preencheLista();
                    JOptionPane.showMessageDialog(this,
                            "Item removido com sucesso", //mensagem
                            "Sucesso", // titulo da janela
                            JOptionPane.INFORMATION_MESSAGE);
                } catch (HeadlessException e) {
                    JOptionPane.showMessageDialog(this,
                            e.toString(), //mensagem
                            "Erro", // titulo da janela
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void btnFileTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFileTxtMouseClicked
        String path = GetPathToSaveFile();
        if (!path.isEmpty()) {
            try {
                FileWriter myWriter = new FileWriter("exportedtxt.txt");
                myWriter.write(GetTextToFile());
                myWriter.close();
            } catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Acesso negado ao caminho do arquivo. Tente executar como admistrador", "Alerta", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Um erro ocorreu, tente novamente", "Alerta", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnFileTxtMouseClicked

    private void btnFileCsvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFileCsvMouseClicked
        String path = GetPathToSaveFile();
        if (!path.isEmpty()) {
            try {
                FileWriter myWriter = new FileWriter("exportedcsv.CSV");
                myWriter.write(GetTextToCsvFile());
                myWriter.close();
            } catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Acesso negado ao caminho do arquivo. Tente executar como admistrador", "Alerta", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Um erro ocorreu, tente novamente", "Alerta", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnFileCsvMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
        new TelaCadastroProdutos().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVisualizarProdutosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVisualizarProdutosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVisualizarProdutosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVisualizarProdutosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVisualizarProdutosView().setVisible(true);
            }
        });
    }

    /**
     * Prepara o texto que será adicionado ao arquivo TXT exportado
     * 
     * @return texto com informações de todos os produtos cadastrados
     */
    private String GetTextToFile() {
        String reallyLongString = "";

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
        LocalDateTime now = LocalDateTime.now();
        reallyLongString = "Mercadinho IFSC\nData: " + dtf.format(LocalDateTime.now()) + "\n\n"
                + "Item       Descrição           Qtd         Valor Unitário          Valor Total\n";

        for (Produto produto : lista) {
            reallyLongString += "\n"
                    + "              " + produto.getNome()
                    + "                " + String.valueOf(produto.getPreco())
                    + "                " + String.valueOf(produto.getId());
        }
        return reallyLongString;
    }
    
    /**
     * Prepara o texto que será adicionado ao arquivo CSV exportado
     * 
     * @return texto com informações de todos os produtos cadastrados em 
     * formato CSV
     */
    private String GetTextToCsvFile() {
        String reallyLongString = "nome;preco;id";
        for (Produto produto : lista) {
            reallyLongString += "\n" + produto.getNome()
                    + ";" + String.valueOf(produto.getPreco())
                    + ";" + String.valueOf(produto.getId());
        }

        return reallyLongString;
    }

    
    /**
     * Abre uma janela para escolha de caminho dos arquivos a serem importados
     * 
     * @return caminho escolhido para criar arquivo de export
     */
    private String GetPathToSaveFile() {
        JFileChooser chooser = new JFileChooser();;
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            return String.valueOf(chooser.getCurrentDirectory());
        } else {
            return "";
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFileCsv;
    private javax.swing.JButton btnFileTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
